version: 2
jobs:
  "golang-1.14":
    docker:
      - image: circleci/golang:1.14
    working_directory: /go/src/go.mozilla.org/cose/
    environment:
      - GO111MODULE: "on" # yaml sees an unquoted on value as "true" but go checks for "on"
    steps:
      - checkout
      - run:
          name: install rust and cargo
          command: |
            sudo apt-get install libnss3-dev
            curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
            source $HOME/.cargo/env
            echo $PATH
            which cargo
      - run:
          name: print rust and cargo version information
          command: |
            source $HOME/.cargo/env
            rustc --version
            cargo --version
      - run:
          name: run tests
          command: |
            source $HOME/.cargo/env
            make ci
  "golang-1.15":
    docker:
      - image: circleci/golang:1.15
    working_directory: /go/src/go.mozilla.org/cose/
    environment:
      - GO111MODULE: "on" # yaml sees an unquoted on value as "true" but go checks for "on"
    steps:
      - checkout
      - run:
          name: install rust and cargo
          command: |
            sudo apt-get install libnss3-dev
            curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
            source $HOME/.cargo/env
            echo $PATH
            which cargo
      - run:
          name: print rust and cargo version information
          command: |
            source $HOME/.cargo/env
            rustc --version
            cargo --version
      - run:
          name: run tests
          command: |
            source $HOME/.cargo/env
            make ci
  "golang-1.16":
    docker:
      - image: circleci/golang:1.16
    working_directory: /go/src/go.mozilla.org/cose/
    environment:
      - GO111MODULE: "on" # yaml sees an unquoted on value as "true" but go checks for "on"
    steps:
      - checkout
      - run:
          name: install rust and cargo
          command: |
            sudo apt-get install libnss3-dev
            curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
            source $HOME/.cargo/env
            echo $PATH
            which cargo
      - run:
          name: print rust and cargo version information
          command: |
            source $HOME/.cargo/env
            rustc --version
            cargo --version
      - run:
          name: run tests
          command: |
            source $HOME/.cargo/env
            make ci
  "lint":
    docker:
      - image: circleci/golang:1.16
    working_directory: /go/src/go.mozilla.org/cose/
    environment:
      - GO111MODULE: "on" # yaml sees an unquoted on value as "true" but go checks for "on"
    steps:
      - checkout
      - run:
          name: install golangci-lint
          command: |
            GO111MODULE=on go get github.com/golangci/golangci-lint/cmd/golangci-lint@v1.26.0
      - run:
          name: print debugging info about go env
          command: go env GOPATH
      - run:
          name: print debugging info about golangci-lint
          command: which golangci-lint
      - run:
          name: Run required linters in .golangci.yml plus hard-coded ones here
          command: $(go env GOPATH)/bin/golangci-lint run --timeout=3m
      - run:
          name: Run optional linters (not required to pass)
          command : $(go env GOPATH)/bin/golangci-lint run --timeout=3m --issues-exit-code=0 -E dupl -E gocritic -E gosimple -E lll -E prealloc

workflows:
  version: 2
  build:
    jobs:
      - "lint"
      - "golang-1.14"
      - "golang-1.15"
      - "golang-1.16"
